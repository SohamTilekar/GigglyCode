struct ListNode {
    value: int;
    next: ListNode;

    def __init__(self: ListNode, value: int, next: ListNode) -> void {
        self.value = value;
        self.next = next;
    };
};

struct LinkedList {
    head: ListNode;

    def __init__(self: LinkedList) -> void {
        self.head = nullptr;
    };

    def add(self: LinkedList, value: int) -> void {
        newNode: ListNode = new ListNode(value, nullptr);
        if (self.head == nullptr) {
            self.head = newNode;
        } else {
            current: ListNode = self.head;
            while (current.next != nullptr) {
                current = current.next;
            }
            current.next = newNode;
        };
    };
};

def main() -> int {
    intList: LinkedList = LinkedList();
    intList.add(10);
    intList.add(20);
    intList.add(30);
    current: ListNode = intList.head;
    while (current != nullptr) {
        printf("List node value: %p\n", current.value);
        current = current.next;
    }
    return 0;
}
